<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/invms/customer/gotoLoginPage.html" />
		<property name="successUrl" value="/index.html" />
		<property name="unauthorizedUrl" value="/unauthorized.html" />
		<property name="filters">
			<util:map>
				<entry key="logout" value-ref="logout"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/**login* = anon
                /**captcha* = anon
				/**logout* = logout
				
				<!-- 我的账户 -->
				/myAccount/**.html = authc
				/myAccount/**/**.html = authc
				
				<!-- 充值提现 -->
				/trade/**.html = authc
				<!-- 第三方回掉 -->
				/callback/**.html = anon
				<!-- 开户 -->
				/invms/customer/gotoThirdAccountInfo.html = authc
				/invms/customer/openThirdAccount.html = authc
				
				<!-- 修改密码 -->
				/invms/customer/changePassword.html = authc
				<!-- 邮箱验证 -->
				/invms/customer/valiMail.html = authc
				
				<!-- 投资 -->
				/invest/investBack.html = authc
				<!-- 还款 -->
                /invms/repaymentPlan/doRepayment.html = authc
                
				<!-- 债权转让 -->
				/creditor/transferCreditor.html = authc
				/creditor/applyCreditor.html = authc
				
				<!-- 签到 -->
				/invms/integral/updateSigned.html = authc
				
				<!-- 红包 -->
				/invms/participant/closeRedpack.html = authc
				
				<!-- 我要借款 -->
				/invms/intention/gotoSave.html = authc
				
				<!-- 合同 -->
				/file/showLoanContract.html = authc
				
				/**/images/** = anon
				/**/*.gif = anon
				/**/*.png = anon
				/**/*.jpg = anon
				/**/*.js* = anon
				/**/*.css* = anon
			</value>
		</property>
	</bean>
	
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter"> 
        <property name="redirectUrl" value="/invms/customer/gotoLoginPage.html" /> 
    </bean> 
    
    <bean id="credentialsMatcher" class="com.ecloud.frame.platform.realms.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/> 
        <property name="storedCredentialsHexEncoded" value="true"/> 
 	</bean>
	
	<bean id="monitorRealm" class="com.ecloud.frame.platform.realms.MonitorRealm">
		<property name="retryLimitHashedCredentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="false"/>
		<property name="customerService" ref="customerService"></property>
        <property name="participantService" ref="participantService"></property>
	</bean>

	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义realm -->
		<property name="realm" ref="monitorRealm" />
		<!-- 基于ehCache来缓存用户认证信息和授权信息的实现 -->
		<property name="cacheManager" ref="cacheManager" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="18000" />
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="com.ecloud.frame.platform.realms.SessionManager">
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>