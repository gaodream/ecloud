<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecloud.master.common.dao.ManagerDAO">


	<!--批量插入容器指标-->
	<insert  id="doBatchInsertCtn"  parameterType="java.util.List"> 
		INSERT INTO ctn_minitue_kpi(ID,APP_ID,SERIVCE_ID,TASK_ID,CTN_ID,AVG_CPU,MAX_CPU,MIN_CPU,AVG_MEM,MAX_MEM,MIN_MEM,TOTAL_MEM,USED_DISK,TOTAL_DISK,NET_DOWN_IO,NET_UP_IO,COLLECT_TIME,INSERT_TIME)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			(SEQ('ctn_minitue_kpi'),#{item.hckAppId},#{item.hckSerivceId},#{item.hckTaskId},#{item.hckCtnId},#{item.hckAvgCpu},#{item.hckMaxCpu},#{item.hckMinCpu},#{item.hckAvgMem},#{item.hckMaxMem},#{item.hckMinMem},#{item.hckTotalMem},#{item.hckUsedDisk},#{item.hckTotalDisk},#{item.hckNetDownIo},#{item.hckNetUpIo},#{item.hckCollectTime},NOW())
		</foreach>
	</insert>

	<!--批量插入主机指标-->
	<insert  id="doBatchInsertHost"  parameterType="java.util.List"> 
		INSERT INTO host_minitue_kpi(ID,HOST_IP,HOST_NAME,AVG_CPU,MAX_CPU,MIN_CPU,AVG_MEM,MAX_MEM,MIN_MEM,TOTAL_MEM,AVG_LOAD,MAX_LOAD,MIN_LOAD,USED_DISK,TOTAL_DISK,NET_DOWN_IO,NET_UP_IO,COLLECT_TIME,INSERT_TIME)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			(SEQ('host_minitue_kpi'),#{item.hhkHostIp},#{item.hhkHostName},#{item.hhkAvgCpu},#{item.hhkMaxCpu},#{item.hhkMinCpu},#{item.hhkAvgMem},#{item.hhkMaxMem},#{item.hhkMinMem},#{item.hhkTotalMem},#{item.hhkAvgLoad},#{item.hhkMaxLoad},#{item.hhkMinLoad},#{item.hhkUsedDisk},#{item.hhkTotalDisk},#{item.hhkNetDownIo},#{item.hhkNetUpIo},#{item.hhkCollectTime},NOW())
		</foreach>
	</insert>
	
	<!--插入容器表-->
	<insert  id="doInsertContainer"  parameterType="ContainerVO"> 
		<!-- <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="appId">
			SELECT DEFAULT_SEQ('DEFAULT') AS appId FROM DUAL
		</selectKey> -->
		INSERT INTO containers_running(app_id,service_id,sub_service_type,marathon_app_id,upgrade_id,task_id,state,fragment_id,fragment_name,app_type,extra_info,create_time,image_name,service_state)
		VALUES(#{appId},#{serviceId},#{subServiceType},#{marathonAppId},#{upgradeId},#{taskId},#{state},#{fragmentId},#{fragmentName},#{appType},#{extraInfo},NOW(),#{imageName},#{serviceState})
    </insert>
    
	<!--删除死亡容器 -->
	<update id="doDeleteContainer"  parameterType="String"> 
		DELETE FROM   containers_running hcr   WHERE 1=1   AND hcr.task_id = #{value} 
	</update>

</mapper>
